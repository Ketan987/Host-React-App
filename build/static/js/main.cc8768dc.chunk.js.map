{"version":3,"sources":["components/HeaderApp.js","components/Square.js","components/Board.js","components/Table.js","components/Reset.js","components/Inputfield.js","components/Timer.js","components/Game.js","index.js"],"names":["HeaderApp","props","styleHead","backgroundColor","margin","height","color","padding","Theme","style","siteTitle","Sqaure","winnerCell","index","id","className","onClick","oncellclick","value","Board","status","winner","player1","player2","current","filter","cell","length","next","map","handelcellclick","Table","data","player","cellNo","Reset","flushAll","Inputfield","player1Name","player2Name","type","onChange","name","target","placeholder","required","handlePlayerNames","alert","Timer","state","timer","resetFlag","this","resetTimer","setState","myInterval","setInterval","checkReset","uniqueName","turn","stopTimer","Component","rows","calculateWinner","cells","lines","i","a","b","c","Game","history","currentCell","num","row","push","concat","clearAllRecord","Array","fill","newMode","mode","renderInputField","renderGameField","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc8768dc.chunk.js","sourcesContent":["import React from 'react';\n\nfunction HeaderApp (props){\n    let styleHead = {\n        backgroundColor : \"#4287f5\",\n        margin: \"0px\",\n        height: \"80px\",\n        color: \"white\",\n        padding: \"25px 0px 0px 25px\",\n    }\n    if(props.Theme ==='Dark'){\n        styleHead.backgroundColor = \"black\";\n    }\n    return(\n        <h1 style={styleHead}>{props.siteTitle}</h1>\n    )\n}\n\nexport default HeaderApp; ","import React from 'react'\nexport default function Sqaure(props) {\n    let style={}\n    if(props.winnerCell){\n        for (let index of props.winnerCell){\n            if(props.id === index){\n                style.backgroundColor = \"Yellow\" \n    }}}\n    return (\n            <button className=\"cell\" style={style} onClick={()=>props.oncellclick(props.id)}>{props.value}</button>\n    );\n}\n","import React from 'react'\nimport Square from \"./Square\";\n\nfunction Board(props) {\n        let status;\n        if(props.winner){\n            status = \"Winner :\" +  (props.winner.winner ==='X'? props.player1:props.player2)\n        }else if(props.current.filter((cell)=> cell!==null).length === 9){\n            status = \"Draw!\"\n        }\n        else{\n            status   = \"Next Move: \" + (props.next ? 'X':'O') +\"-->\"+ (props.next ? props.player1 : props.player2)\n        }\n    return (\n        <div>   \n            <div>\n                 <div className =\"status\">{status}</div>\n                    <div className=\"board\">\n                    {\n                        props.current.map((value,index)=>(\n                        <Square id={index} value={value} winnerCell={props.winner? props.winner.winnerCell:null} oncellclick={props.handelcellclick}/>)\n                        )\n                    }        \n                 </div>\n             </div>\n            \n            \n        </div>\n    )\n}\nexport default Board;","import React from 'react'\n\nexport default function Table(props) {\n    return (\n        <div >\n            \n             <table >\n                    <thead>\n                        <tr>\n                            <th>Index</th>\n                            <th>Value</th>\n                            <th>Position</th>\n                       </tr>\n                    </thead>\n                    <tbody>\n                    {props.data.map((value)=>{\n                        return(\n                            <tr>\n                                <td>{value.index}</td>\n                                <td>{value.player}</td>\n                                <td>{value.cellNo}</td>\n                            </tr>\n                        )     \n                    })}\n                    </tbody>\n            </table>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Reset(props) {\n    return (\n        <div>\n            <button className=\"reset-btn\" onClick={props.flushAll}>Reset</button>\n        </div>\n    )\n}\n","import React from 'react'\nfunction Inputfield(props) {\n    let player1Name;\n    let player2Name;\n    const handlePlayer1 = (name)=>{\n        player1Name = name.target.value;\n    }\n    const handlePlayer2 = (name)=>{\n        player2Name = name.target.value;\n    }\n    const saveValues=()=>{\n        if(player1Name && player2Name){\n            // console.log(player1Name,player2Name);\n            props.handlePlayerNames(player1Name,player2Name,\"Game\")\n        }else{\n            alert(\"Enter Name of Players\")\n        }\n    }\n    return (\n        <div className=\"input-field\">\n            <label>Player 1</label>\n            <input type=\"text\" onChange={handlePlayer1} placeholder={props.player1} required></input>\n            <label>Player 2</label>\n            <input type=\"text\" onChange={handlePlayer2} placeholder={props.player2} required></input>\n            <button className=\"submit-btn\" onClick={saveValues}>Submit</button>\n        </div>\n    )\n}\n\nexport default Inputfield;","import React, { Component } from 'react'\n\nexport default class Timer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            timer : 0,\n            resetFlag: false\n        }\n    }\n    render() {\n        return (\n            <div>\n               <p className=\"timer\">{this.state.timer}</p> \n               <h4 className=\"player-name\">{this.props.player}</h4> \n            </div>\n        )\n    }\n    checkReset(){\n        if(this.props.resetTimer !== this.state.resetFlag){\n            this.setState({timer:0,resetFlag:!this.state.resetFlag})\n        }\n    }\n    componentDidMount(){\n            {   \n                    this.myInterval = setInterval(() => {\n                        this.checkReset();\n                        if(this.props.uniqueName === \"X\" && this.props.turn === \"first\" && !this.props.stopTimer){\n                            this.setState({\n                                timer : this.state.timer + 1\n                            })\n                        }else if(this.props.uniqueName === \"O\" && this.props.turn === \"second\" && !this.props.stopTimer){\n                            this.setState({\n                                timer : this.state.timer + 1\n                            })\n                        }\n                    }, 1000);\n            }\n    }\n}\n","import React from 'react'\nimport HeaderApp from './HeaderApp'\nimport  Board  from \"./Board\";\nimport Table from './Table';\nimport Reset from './Reset';\nimport Inputfield from './Inputfield';\nimport Timer from './Timer';\nlet rows = [];\nlet stopTimer = false;\nclass Game extends React.Component {\n  constructor(props){\n    super();\n    this.state = {\n        history:[{\n          cells:Array(9).fill(null)\n        }],\n        next:true,\n        player1Name : \"X\",\n        player2Name : \"O\",\n        mode: 'Input',\n        turn: \"first\",\n        resetTimer:false \n    }\n  }\n  handelcellclick=(id)=>{\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const currentCell = [...current.cells]\n    if(calculateWinner(currentCell) || currentCell[id]){\n        return;\n    }\n    currentCell[id] = this.state.next ? 'X':'O';\n    let index=currentCell.filter((num)=>{\n        return num!=null\n    }).length\n    let row ={cellNo:id , player : currentCell[id],index:index}\n    rows.push(row);\n    this.setState({\n        history: history.concat([{\n          cells: currentCell,\n        }]),\n        next: !this.state.next,\n        turn: this.state.next ? 'second':'first'\n      });\n        \n      \n  } \n  clearAllRecord=()=>{\n    this.setState({\n        history:[{\n            cells: Array(9).fill(null),\n        }],\n        next : true,\n        resetTimer: !this.state.resetTimer\n    });\n    rows=[];\n  }\n  handlePlayerNames =(player1,player2,newMode)=>{\n    this.setState({\n      player1Name: player1,\n      player2Name: player2,\n      mode:newMode\n    })\n  }\n  renderInputField=()=>{\n    return(\n      <div>\n          <Inputfield handlePlayerNames={this.handlePlayerNames} player1={this.state.player1Name} player2={this.state.player2Name}/>\n      </div>\n      \n    );\n  };\n  renderGameField=()=>{\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.cells);\n    if(winner){\n      stopTimer= !stopTimer;\n    }\n      return(\n        <>\n        <div className=\"horizontal-layout\">\n             <div>\n                 <Board current={current.cells} player1={this.state.player1Name} player2={this.state.player2Name} winner={winner} next={this.state.next} handelcellclick={this.handelcellclick} rows={this.rows}/>\n             </div>\n             <div className=\"resultTable\">\n                 <Table data = {rows}/>\n             </div>\n         </div>\n         <Reset flushAll={this.clearAllRecord}/>\n        <div className=\"horizontal-layout timer-layout\">\n          <Timer uniqueName=\"X\" player={this.state.player1Name} turn={this.state.turn} resetTimer={this.state.resetTimer} stopTimer={stopTimer}/>\n          <Timer uniqueName=\"O\" player={this.state.player2Name} turn={this.state.turn} resetTimer={this.state.resetTimer} stopTimer={stopTimer}/>\n        </div>\n        </>\n    );  \n  };\n  \n  render() {\n    \n    return (\n      <div>\n        <div className=\"App\">\n          <HeaderApp siteTitle=\"Tic-Tak-Toe\" Theme=\"Dark\"/>\n          {\n            this.state.mode===\"Input\"? this.renderInputField() : this.renderGameField()\n          }\n      </div>\n      </div>\n    )\n  }\n}\nfunction calculateWinner(cells) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (cells[a] && cells[a] === cells[b] && cells[a] === cells[c]) {\n      return {winner:cells[a], winnerCell:lines[i]};\n    }\n  }\n  return null;\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/Game';\nimport './style.css';\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}